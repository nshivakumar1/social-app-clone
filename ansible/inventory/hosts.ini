# Ansible Inventory for Social App Clone Infrastructure

[all:vars]
ansible_python_interpreter=/usr/bin/python3
ansible_ssh_common_args='-o StrictHostKeyChecking=no'

# Jenkins CI/CD Server
[jenkins]
jenkins-server ansible_host=100.28.67.190 ansible_user=ec2-user

[jenkins:vars]
jenkins_port=8080
jenkins_home=/var/lib/jenkins

# ECS Fargate (managed via AWS API - no direct SSH)
[ecs]
# ECS tasks are managed via AWS API, not direct SSH
# Use aws_ecs ansible modules for management

# Application Load Balancer (managed via AWS API)
[alb]
# ALB managed via AWS API
# Primary ALB: social-app-clone-1321601292.us-east-1.elb.amazonaws.com

# Development/Staging Servers (add as needed)
[staging]
# staging-server ansible_host=x.x.x.x ansible_user=ec2-user

[production]
# production-server ansible_host=x.x.x.x ansible_user=ec2-user

# Database Servers (for future use)
[database]
# db-server ansible_host=x.x.x.x ansible_user=ec2-user

# Monitoring Servers
[monitoring]
# monitoring-server ansible_host=x.x.x.x ansible_user=ec2-user

# Group definitions
[aws:children]
jenkins
ecs
alb

[ci_cd:children]
jenkins

[app_servers:children]
ecs
staging
production

# AWS Dynamic Inventory Configuration
# To use AWS dynamic inventory, install boto3 and create inventory/aws_ec2.yml
